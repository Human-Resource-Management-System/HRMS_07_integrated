<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-07-02T12:08:25 IST" name="Default suite" finished-at="2023-07-02T12:08:26 IST" duration-ms="1015">
    <groups>
    </groups>
    <test started-at="2023-07-02T12:08:25 IST" name="Default test" finished-at="2023-07-02T12:08:26 IST" duration-ms="1015">
      <class name="test.EmployeeAttendanceServiceTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:25 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testCalculateAttendance()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testCalculateAttendance" finished-at="2023-07-02T12:08:26 IST" duration-ms="44" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCalculateAttendance -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConvertToDateTime_WhenCellContainsDateTime_ReturnsDateTimeValue()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testConvertToDateTime_WhenCellContainsDateTime_ReturnsDateTimeValue" finished-at="2023-07-02T12:08:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToDateTime_WhenCellContainsDateTime_ReturnsDateTimeValue -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testConvertToDateTime_WhenCellDoesNotContainDateTime_ReturnsNull()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testConvertToDateTime_WhenCellDoesNotContainDateTime_ReturnsNull" finished-at="2023-07-02T12:08:26 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConvertToDateTime_WhenCellDoesNotContainDateTime_ReturnsNull -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAvgPunchInAndOut_WithNoPunchData_ReturnsEmptyList()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testGetAvgPunchInAndOut_WithNoPunchData_ReturnsEmptyList" finished-at="2023-07-02T12:08:26 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAvgPunchInAndOut_WithNoPunchData_ReturnsEmptyList -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetAvgPunchInAndOut_WithValidData_ReturnsAveragePunchInAndOutTimes()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testGetAvgPunchInAndOut_WithValidData_ReturnsAveragePunchInAndOutTimes" finished-at="2023-07-02T12:08:26 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAvgPunchInAndOut_WithValidData_ReturnsAveragePunchInAndOutTimes -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetYears()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testGetYears" finished-at="2023-07-02T12:08:26 IST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetYears -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testGetYesterdayPunchData()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testGetYesterdayPunchData" finished-at="2023-07-02T12:08:26 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetYesterdayPunchData -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="setUp" finished-at="2023-07-02T12:08:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testInsertEmployeeAttendance()[pri:0, instance:test.EmployeeAttendanceServiceTest@4b20ca2b]" started-at="2023-07-02T12:08:26 IST" name="testInsertEmployeeAttendance" finished-at="2023-07-02T12:08:26 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInsertEmployeeAttendance -->
      </class> <!-- test.EmployeeAttendanceServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
